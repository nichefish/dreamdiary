/**
 * dependencies.gradle
 * build.gradle 파일에서 dependencies 블록을 분리하여 관리
 * "Gradle은 dependencies {} 블록을 여러 개 선언해도 하나로 합쳐서 처리한다."
 *
 * @auther: nichefish
 */

/**
 * 프로젝트 의존성 정의
 * 폐쇄망 환경에서 /lib 폴더 아래의 모든 .jar 파일을 의존성에 추가한다.
 */
dependencies {
    // lib 폴더 아래의 모든 파일: 변수 선언
    def localLibraryJars = fileTree(dir: 'lib', include: ['**/*.jar'])

    // 모든 스코프에 대하여 로컬 라이브러리 JAR 의존성 설정
    implementation localLibraryJars
    compileOnly localLibraryJars
    annotationProcessor localLibraryJars
    runtimeOnly localLibraryJars

    developmentOnly localLibraryJars

    testImplementation localLibraryJars
    testCompileOnly localLibraryJars
    testAnnotationProcessor localLibraryJars
    testRuntimeOnly localLibraryJars
}

/**
 * 프로젝트 의존성 정의
 * 일반적인 (인터넷 가능) 환경에서의 의존성 정의
 */
dependencies {
    /* ↓ Spring Boot 기본 모듈 */
    implementation(platform("org.springframework.boot:spring-boot-dependencies:3.2.2"))
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'    // @Valid 사용을 위해 필요
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.session:spring-session-core'

    /* ↓ Spring Security 및 기타 인증 */
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation "io.jsonwebtoken:jjwt:0.9.1"
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    /* ↓ MariaDB */
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    /* ↓ Flyway (.sql 스키마 버전관리) */
    implementation 'org.flywaydb:flyway-core:11.2.0'
    implementation 'org.flywaydb:flyway-mysql:11.2.0'
    /* ↓ p6spy (sql 로깅) */
    implementation 'p6spy:p6spy:3.9.1'
    /* ↓ MyBatis */
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.2'
    implementation 'org.mybatis:mybatis:3.5.13'
    implementation 'org.mybatis:mybatis-spring:2.0.7'
    /* ↓ JPA */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    /* ↓ Hibernate */
    implementation 'org.hibernate:hibernate-java8:5.6.15.Final'
    implementation 'org.hibernate:hibernate-ehcache:5.6.15.Final'
    /* ↓ QueryDSL */
    implementation 'com.querydsl:querydsl-jpa:4.4.0'
    annotationProcessor 'com.querydsl:querydsl-apt:4.4.0:jpa'

    /* ↓ log4j2 */
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.apache.logging.log4j:log4j-web'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.12.4'
    implementation(platform('org.apache.logging.log4j:log4j-bom:2.20.0'))

    /* ↓ FreeMarker: ?cn 사용 위해 버전업 */
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.freemarker:freemarker:2.3.32'
    /* ↓ Mustache */
    implementation 'org.springframework.boot:spring-boot-starter-mustache'

    /** ↓ Cache */
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'javax.cache:cache-api:1.1.1'    // JCache API. expiry 기능을 위해 필요
    implementation 'org.ehcache:ehcache:3.10.8'

    /* ↓ Redis */
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    /* ↓ Kafka */
    implementation 'org.springframework.kafka:spring-kafka'

    /* ↓ ElasticSearch */
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.springframework.data:spring-data-elasticsearch:5.1.2'
    implementation 'co.elastic.clients:elasticsearch-java:8.10.4'

    /* ↓ Jakarta JSON API */
    implementation 'jakarta.json:jakarta.json-api:2.0.1'
    implementation 'org.glassfish:jakarta.json:2.0.1'
    /* ↓ json 기본기능 */
    implementation 'org.json:json:20231013'
    /* ↓ jackson */
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.4'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.7.1'

    /* ↓ Websocket */
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework:spring-messaging:5.3.39'
    /* ↓ Paho MQTTv3 */
    implementation group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.5'

    /* ↓ 환경 변수 관리 (DotEnv) */
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'

    /* ↓ httpClient */
    implementation 'org.apache.httpcomponents:httpcore:4.4.15'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'

    /* ↓ File */
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.14.0'
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.5'

    /* ↓ Microsoft(excel, pdf) api */
    implementation 'org.apache.poi:poi-ooxml:5.2.2'
    /* ↓ html2pdf (using itext) */
    implementation 'com.itextpdf:itextpdf:5.5.13.3'
    implementation 'com.itextpdf.tool:xmlworker:5.5.13.3'
    implementation 'com.itextpdf:html2pdf:4.0.3'
    /* ↓ pdfbox */
    implementation 'org.apache.pdfbox:pdfbox:3.0.0-alpha2'

    /* ↓ javax.mail api */
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    /* ↓ snmp4j (청각 경보) */
    implementation group: 'org.snmp4j', name: 'snmp4j', version: '3.5.1'

    /* ↓ maxmind geoip2 */
    implementation 'com.maxmind.geoip2:geoip2:4.2.0'
    /* ↓ subnetUtils (CIDR 처리 위함) */
    implementation group: 'commons-net', name: 'commons-net', version: '3.9.0'

    /* ↓ UUID */
    implementation group: 'com.fasterxml.uuid', name: 'java-uuid-generator', version: '5.0.0'

    /* ↓ 모바일/태블릿 환경 구분 */
    implementation 'org.springframework.mobile:spring-mobile-device:1.1.5.RELEASE'

    /* ↓ 음력계산 */
    implementation group: 'com.ibm.icu', name: 'icu4j', version: '73.2'

    /* ↓ jsoup: 텍스트에디터 서버사이트 필터링 */
    implementation 'org.jsoup:jsoup:1.16.1'

    /* ↓ selenium */
    implementation 'org.seleniumhq.selenium:selenium-java:4.17.0'

    /* ↓ Spring Boot annotation 지원 = @ConfigurationProperties 사용 위해 필요 */
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    /* ↓ Java 표준 annotation 지원 */
    annotationProcessor 'javax.annotation:javax.annotation-api:1.3.2'
    /* ↓ IntelliJ 전용 annotation 지원 */
    implementation 'org.jetbrains:annotations:16.0.3'
    /* ↓ @Nullable 등 정적 분석 annotation 지원 */
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    /**
     * ↓ lombok , mapstruct
     * !중요 :: mapstruct가 객체의 getter/setter를 체크하므로 lombok annotation이 적용되지 않은 상태에선 무조건 텅 빈 객체를 리턴한다.
     * !중요 :: 그러므로 mapstruct는 무조건 lombok보다 뒤로 가야 한다.
     */
    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    /* ↓ Swagger: springdoc */
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.7.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-javadoc', version: '1.7.0'
    /* ↓ RestDocs*/
    implementation 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

/**
 * 개발 환경 프로젝트 의존성 정의
 */
dependencies {
    /* ↓ devtools (개발 편의성 도구) */
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

/**
 * 테스트 환경 프로젝트 의존성 정의
 */
dependencies {
    /* ↓ Spring Boot 테스트 지원 */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    /* ↓ Spring Security 테스트 지원 */
    testImplementation 'org.springframework.security:spring-security-test'
    /* ↓ Spring Data JPA 테스트 지원 */
    testImplementation 'org.beamfoundry.bundles.spring-data-jpa.test:org.beamfoundry.bundles.spring-data-jpa.test-common:1.6.4.RELEASE_2'
    /* ↓ Spring RestDocs 테스트 지원 */
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    /* ↓ Mock 객체를 활용한 단위 테스트: static 메소드 테스트 위해 추가 */
    testImplementation 'org.mockito:mockito-inline:5.0.0'

    /* ↓ JUnit 4 테스트 프레임워크 (일부러 4로 설정) */
    implementation 'junit:junit:4.13.2'
    /* ↓ TestNG */
    testImplementation 'org.testng:testng:7.7.0'

    /* ↓ commons-lang3 */
    testCompileOnly group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    /*
     * ↓ lombok , mapstruct
     * !중요 :: mapstruct가 객체의 getter/setter를 체크하므로 lombok annotation이 적용되지 않은 상태에선 무조건 텅 빈 객체를 리턴한다.
     * !중요 :: 그러므로 mapstruct는 무조건 lombok보다 뒤로 가야 한다.
     */
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.mapstruct:mapstruct:1.5.5.Final'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
}